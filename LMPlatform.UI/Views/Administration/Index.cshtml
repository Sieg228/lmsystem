@model LMPlatform.UI.ViewModels.AdministrationViewModels.UserActivityViewModel
@{
    ViewBag.Title = "Администрирование";
    Layout = "~/Views/Shared/Layouts/_AdministrationLayout.cshtml";
}

@section scripts
{
    <script src="~/Scripts/jqplot/jquery.jqplot.min.js" type="text/javascript"></script>
    <script src="~/Scripts/jqplot/jqplot.pieRenderer.min.js" type="text/javascript"></script>
    <script type="text/javascript" src="~/Scripts/jqplot/jqplot.cursor.min.js"></script>
    <script type="text/javascript" src="~/Scripts/jqplot/jqplot.highlighter.min.js"></script>
}

@section title
{
    Администрирование LMS
}
<div style="display: inline-block">
    <div class="col-md-12">
        <div class="col-md-6">
            <h4>Активность пользователей</h4>
            <span>Показывает процентное соотношение пользователей, осуществиших свой последний вход в систему в последние сутки, от суток до недели  и тд., от общего числа пользователей</span>
        </div>
        <div class="col-md-6" style="border-left: 1px #dddddd solid;">
            <h5>Всего пользователей: @Model.TotalUsersCount</h5>
            <h5>Зарегистрировано студентов: @Model.TotalStudentsCount</h5>
            <h5>Зарегистрировано преподавателей: @Model.TotalLecturersCount</h5>
            <h5>Сервисных аккаунтов: @Model.ServiceAccountsCount</h5>
        </div>
    </div>
    <div class="col-md-12" style="text-align: center; margin-top: 40px;">
        <div id="chart1" style="width: 600px; height: 350px; display: inline-block;"></div>
    </div>
</div>

<script>
    $(document).ready(function () {

        var data = @Html.Raw(Model.UserActivityJson);

        var line = [];
        for (var propName in data) {
            line.push([propName, data[propName]]);
        }

        var plot1 = jQuery.jqplot('chart1', [line],
          {
              seriesDefaults: {
                  // Make this a pie chart.
                  renderer: jQuery.jqplot.PieRenderer,
                  rendererOptions: {
                      showDataLabels: true,
                      sliceMargin: 5
                  }
              },
              grid: {
                  drawGridLines: true,        // wether to draw lines across the grid or not.
                  gridLineColor: '#cccccc',    // *Color of the grid lines.
                  background: '#fafafa',      // CSS color spec for background color of grid.
                  borderWidth: 0,           // pixel width of border around grid.
                  shadow: false,               // draw a shadow for grid.
                  renderer: $.jqplot.CanvasGridRenderer,  // renderer to use to draw the grid.
                  rendererOptions: {}         // options to pass to the renderer.  Note, the default
              },
              legend: { show: true, location: 'e' }
          }
        );
    });
</script>
